- include: tests/templates/kv.yml, tests/templates/n1ql.yml, tests/templates/rebalance.yml

############### data loading ################
- image: sequoiatools/gideon
  command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10     --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
- command: "kv --ops {{.Scale 500}} --create 60 --get 40 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
- command: "kv --ops {{.Scale 500}} --create 60 --get 40 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
- command: "kv --ops {{.Scale 200}} --create 100 --sizes 1024  --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"


###############  create indexes ################
- section_start: create_replica_indexes
- template: cbq
  args: "'create index default_rating on `{{.Bucket}}`\\(rating) using GSI with {\\\"num_replica\\\":1}'"
- args: "'create index default_claims on `{{.Bucket}}`\\(claim) using GSI with {\\\"num_replica\\\":2}'"
- args: "'create index default_result on `{{.Bucket}}`\\(result) using GSI with {\\\"num_replica\\\":1,\\\"defer_build\\\": true}'"
- args: "'create primary index on `{{.Bucket}}` using GSI with {\\\"num_replica\\\":2}'"
- args: "'create index o1_rating on `{{.NthBucket 1}}`\\(rating) using GSI with {\\\"num_replica\\\":2}'"
- args: "'create index o1_claims on `{{.NthBucket 1}}`\\(claim) using GSI with {\\\"num_replica\\\":1,\\\"defer_build\\\": true}'"
- args: "'create index o1_result on `{{.NthBucket 1}}`\\(result) using GSI with {\\\"num_replica\\\":1}'"
- args: "'create index o2_rating on `{{.NthBucket 2}}`\\(rating) using GSI with {\\\"num_replica\\\":2}'"
- args: "'create index o2_claims on `{{.NthBucket 2}}`\\(claim) using GSI with {\\\"num_replica\\\":1}'"
- args: "'create index o2_result on `{{.NthBucket 2}}`\\(result) using GSI with {\\\"num_replica\\\":2}'"
- args: "'create index o3_rating on `{{.NthBucket 3}}`\\(rating) using GSI with {\\\"num_replica\\\":1,\\\"defer_build\\\": true}'"
- args: "'create index o3_claims on `{{.NthBucket 3}}`\\(claim) using GSI with {\\\"num_replica\\\":1}'"
- args: "'create index o3_result on `{{.NthBucket 3}}`\\(result) using GSI with {\\\"num_replica\\\":2}'"
- args: "'build index on `{{.Bucket}}`\\(result)'"
- args: "'build index on `{{.NthBucket 1}}`\\(claim)'"
- args: "'build index on `{{.NthBucket 3}}`\\(rating)'"
- section_end: create_replica_indexes

# ###############  run queries ################
- section_start: query_replica_indexes
- template: attack_query
  args: "0, {{.Scale 3}}, {{.QueryNodePort}}, 'select SUM\\(result) from default where result > 0 limit 50'"
- args: "0, {{.Scale 3}}, {{.QueryNodePort}}, 'select claim from default where result > 0 limit 50'"
- args: "0, {{.Scale 3}}, {{.QueryNodePort}}, 'select SUM\\(result) from `{{.NthBucket 1}}` where result > 100  limit 50'"
- args: "0, {{.Scale 3}}, {{.QueryNodePort}}, 'select * from `{{.NthBucket 1}}` where result > 100  limit 50'"
- args: "0, {{.Scale 3}}, {{.QueryNodePort}}, 'select SUM\\(result) from `{{.NthBucket 2}}` where claim like c% limit 50'"
- args: "0, {{.Scale 3}}, {{.QueryNodePort}}, 'select SUM\\(result) from `{{.NthBucket 3}}` where rating like a% limit 20'"
- section_end: query_replica_indexes


############### run creates ################
- image: sequoiatools/gideon
  command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10    --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
  duration: 1200
- command: "kv --ops {{.Scale 1000}} --create 50 --get 50 --delete 10  --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
  duration: 1200
- command: "kv --ops {{.Scale 1000}} --create 80 --get 20 --delete 40  --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
  duration: 1200
- command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10  --sizes 512  --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"
  duration: 1200
- section_start: change_indexer_topologies

###############  Rebalance-in single node ################
- template: rebalance_in
  args: "{{.InActiveNode}}, index"
  wait: true

###############  Rebalance-out single node ################
- template: rebalance_out
  args: "{{.ActiveIndexNode 0}}"
  wait: true

###############  Swap single index node ################
- template: rebalance_swap
  args: "{{.InActiveNode}}, {{.ActiveIndexNode 0}}, index"
  wait: true

###############  Rebalance-in two nodes ################
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance
  wait: true

###############  Rebalance-out two nodes ################
- template: rebalance_out
  args: "({{.ActiveIndexNode 0}},{{.ActiveIndexNode 2}})"
  wait: true

###############  Swap Rebalance two nodes ################
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance_out
  args: "({{.NthDataNode 1}})"
  wait: true

###############  Add back data node ################
- template: rebalance_in
  args: "{{.InActiveNode}}"
  wait: true


###############  Failover and addback ################
- template: failover_node_forced
  args: "{{.NthIndexNode 2}}"
- template: readd_node
  args: "{{.NthIndexNode 2}}"
- template: recover_node
  args: "{{.NthIndexNode 2}}, full"
- template: rebalance
  wait: true

###############  Failover and rebalance out ################
- template: failover_node_forced
  args: "{{.ActiveIndexNode 1}}"
- template: rebalance
  wait: true

###############  Rebalance-out single node ################
- template: rebalance_out
  args: "{{.ActiveIndexNode 2}}"
  wait: true


###############  Add back index nodes  ################
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance
- section_end: change_indexer_topologies

###############  Drop some Indexes ################
- section_start: recreate_replica_indexes
- template: cbq
  args: "'drop primary index on `{{.Bucket}}` using GSI'"
- args: "'drop index `{{.Bucket}}`.default_rating using GSI'"
- args: "'drop index `{{.NthBucket 1}}`.o1_rating using GSI'"
- args: "'drop index `{{.NthBucket 1}}`.o1_claims using GSI'"
- args: "'drop index `{{.NthBucket 2}}`.o2_result using GSI'"
- args: "'drop index `{{.NthBucket 3}}`.o3_rating using GSI'"
- args: "'drop index `{{.NthBucket 3}}`.o3_result using GSI'"

###############  Recreate some Indexes ################
- template: cbq
  args: "'create index default_rating on `{{.Bucket}}`\\(rating) using GSI'"
- args: "'create primary index on `{{.Bucket}}` using GSI'"
- args: "'create index o1_claims on `{{.NthBucket 1}}`\\(claim) using GSI'"
- args: "'create index o2_result on `{{.NthBucket 2}}`\\(result) using GSI'"
- args: "'create index o3_rating on `{{.NthBucket 3}}`\\(rating) using GSI'"
- section_end: recreate_replica_indexes

###############  Rebalance-out last index node ################
- template: rebalance_out
  args: "{{.Nodes | net 3}}"
  wait: true
