- include: tests/templates/kv.yml, tests/templates/n1ql.yml, tests/templates/rebalance.yml

############### data loading ################
- image: sequoiatools/gideon
  command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10  --expire 15 --ttl 600   --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
- command: "kv --ops {{.Scale 500}} --create 60 --get 40 --sizes 64 96 --expire 20 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
- command: "kv --ops {{.Scale 500}} --create 60 --get 40 --sizes 64 96 --expire 20 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
- command: "kv --ops {{.Scale 200}} --create 100 --sizes 1024 --expire 80 --ttl 600 --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"


###############  create indexes ################
- section_start: create_replica_indexes
- image: sequoiatools/cbq
  command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_rating on `{{.Bucket}}`(rating) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_claims on `{{.Bucket}}`(claim) using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_result on `{{.Bucket}}`(result) using GSI with {\"num_replica\":1,\"defer_build\": true}'"
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.Bucket}}` using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_claims on `{{.NthBucket 1}}`(claim) using GSI with {\"num_replica\":1,\"defer_build\": true}'"
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_result_rating on `{{.NthBucket 1}}`(result,rating) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_rating on `{{.NthBucket 2}}`(rating) using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_claims on `{{.NthBucket 2}}`(claim) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_result on `{{.NthBucket 2}}`(result) using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_rating on `{{.NthBucket 3}}`(rating) using GSI with {\"num_replica\":1,\"defer_build\": true}'"
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_claims on `{{.NthBucket 3}}`(claim) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_result on `{{.NthBucket 3}}`(result) using GSI with {\"num_replica\":2}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_result_ratings_claims_pindex on `{{.Bucket}}`(result,rating,claim) partition by hash(rating) using GSI with {\"num_replica\":1}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.NthBucket 1}}` partition by hash(claim,result,rating) using GSI with {\"num_partition\":64}'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_result_rating on `{{.NthBucket 2}}`(result,rating) partition by hash(claim) using GSI'"
  wait: true
- command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_result_rating on `{{.NthBucket 3}}`(result,rating) partition by hash(LOWER(claim),rating) using GSI with {\"defer_build\": true}'"

- template: cbq
  args: "'build index on `{{.Bucket}}`\\(default_result)'"
  wait: true
- args: "'build index on `{{.NthBucket 1}}`\\(o1_claims)'"
  wait: true
- args: "'build index on `{{.NthBucket 3}}`\\(o3_rating)'"
  wait: true
- args: "'build index on `{{.NthBucket 3}}`\\(o3_result_rating)'"
  wait: true
# Sleep for some time to allow DDL to complete if running in background.
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

- section_end: create_replica_indexes


# ###############  run queries ################
- section_start: query_replica_indexes
- template: attack_query
  args: "0, 1, {{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}, 'select DISTINCT\\(result) from default where result is not null LIMIT 200'"
- args: "0, 1, {{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}, 'select * from `{{.NthBucket 1}}` limit 25 offset 1000'"
- args: "0, 1, {{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}, 'select claim from `{{.NthBucket 3}}` where claim is not null limit 100'"

- image: sequoiatools/cbdozer
  command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}/query/service
            -body 'select result,AVG(rating),MIN(rating),MAX(rating) from `{{.Bucket}}` where result = \"SUCCESS\" and rating >= 800 and rating <= 825 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}/query/service
            -body 'select result,SUM(rating) from `{{.NthBucket 1}}` where result is not null and rating >= 100 and rating <= 125 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 1}}:{{.QueryPort}}/query/service
            -body 'select result,AVG(rating),MIN(rating),MAX(rating) from `{{.NthBucket 2}}` where result = \"SUCCESS\" and rating >= 800 and rating <= 825 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}/query/service
            -body 'select result,SUM(rating) from `{{.NthBucket 3}}` where result is not null and rating >= 400 and rating <= 425 group by result'"
- command: "-method POST -duration 0 -rate 1 -url http://{{$.RestUsername}}:{{$.RestPassword}}@{{.Nodes | .Service `n1ql` | net 0}}:{{.QueryPort}}/query/service
            -body 'select round(min(rating),2) as min_rating,round(max(rating),2) as max_rating,round(avg(rating),2) as avg_rating from `{{.NthBucket 1}}` where rating between 500 and 550'"
- section_end: query_replica_indexes

############### run creates ################
- image: sequoiatools/gideon
  command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10    --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
  duration: 1200
- command: "kv --ops {{.Scale 1000}} --create 50 --get 50 --delete 10  --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
  duration: 1200
- command: "kv --ops {{.Scale 1000}} --create 80 --get 20 --delete 40  --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
  duration: 1200
- command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10  --sizes 512  --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"
  duration: 1200

- section_start: change_indexer_topologies

###############  Rebalance-in single node ################
- template: rebalance_in
  args: "{{.InActiveNode}}, index"
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Rebalance-out single node ################
- template: rebalance_out
  args: "{{.ActiveIndexNode 0}}"
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Swap single index node ################
- template: rebalance_swap
  args: "{{.InActiveNode}}, {{.ActiveIndexNode 0}}, index"
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Rebalance-in two nodes ################
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Rebalance-out two nodes ################
- template: rebalance_out
  args: "({{.ActiveIndexNode 0}},{{.ActiveIndexNode 2}})"
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Swap Rebalance two nodes ################
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance_out
  args: "({{.ActiveIndexNode 0}},{{.ActiveIndexNode 2}})"
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Rebalance out data node ################
- template: rebalance_out
  args: "({{.NthDataNode 1}})"
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Add back data node ################
- template: rebalance_in
  args: "{{.InActiveNode}}"
  wait: true

# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Failover and addback ################
- template: failover_node_forced
  args: "{{.NthIndexNode 2}}"
- template: readd_node
  args: "{{.NthIndexNode 2}}"
- template: recover_node
  args: "{{.NthIndexNode 2}}, full"
- template: rebalance
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Failover and rebalance out ################
- template: failover_node_forced
  args: "{{.ActiveIndexNode 1}}"
- template: rebalance
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true

###############  Rebalance-out single node ################
- template: rebalance_out
  args: "{{.ActiveIndexNode 1}}"
  wait: true

# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true
###############  Add back index nodes  ################
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance
  wait: true
# Sleep for some more time after rebalance completes
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "300"
   wait: true
- section_end: change_indexer_topologies

###############  Drop some Indexes ################
- section_start: recreate_replica_indexes
- template: cbq
  args: "'drop primary index on `{{.Bucket}}` using GSI'"
- args: "'drop index `{{.Bucket}}`.default_rating using GSI'"
- args: "'drop index `{{.NthBucket 1}}`.o1_claims using GSI'"
- args: "'drop index `{{.NthBucket 2}}`.o2_result using GSI'"
- args: "'drop index `{{.NthBucket 3}}`.o3_rating using GSI'"
# Sleep for some time to allow DDL to complete in the background
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "600"
   wait: true

###############  Recreate some Indexes ################
- template: cbq
  args: "'create index default_rating on `{{.Bucket}}`\\(rating) using GSI'"
- args: "'create primary index on `{{.Bucket}}` using GSI'"
- args: "'create index o1_claims on `{{.NthBucket 1}}`\\(claim) using GSI'"
- args: "'create index o2_result on `{{.NthBucket 2}}`\\(result) using GSI'"
- args: "'create index o3_rating on `{{.NthBucket 3}}`\\(rating) using GSI'"
# Sleep for some time to allow DDL to complete in the background
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "600"
   wait: true
- section_end: recreate_replica_indexes

###############  Drop all Indexes ################
- section_start: drop_all_indexes
- template: cbq
  args: "'drop index `{{.Bucket}}`.default_rating'"
- args: "'drop index `{{.Bucket}}`.default_claims'"
- args: "'drop index `{{.Bucket}}`.default_result'"
- args: "'drop primary index on `{{.Bucket}}`'"
- args: "'drop index `{{.NthBucket 1}}`.o1_claims'"
- args: "'drop index `{{.NthBucket 1}}`.o1_result_rating'"
- args: "'drop index `{{.NthBucket 2}}`.o2_result'"
- args: "'drop index `{{.NthBucket 2}}`.o2_claims'"
- args: "'drop index `{{.NthBucket 2}}`.o2_rating'"
- args: "'drop index `{{.NthBucket 3}}`.o3_rating'"
- args: "'drop index `{{.NthBucket 3}}`.o3_claims'"
- args: "'drop index `{{.NthBucket 3}}`.o3_result'"
- args: "'drop index `{{.Bucket}}`.default_result_ratings_claims_pindex'"
- args: "'drop index `{{.NthBucket 2}}`.o2_result_rating'"
- args: "'drop index `{{.NthBucket 3}}`.o3_result_rating'"
- args: "'drop primary index on `{{.NthBucket 1}}`'"
# Sleep for some time to allow DDL to complete in the background
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "600"
   wait: true
- section_end: drop_all_indexes
