-
  include: tests/templates/kv.yml, tests/templates/n1ql.yml, tests/templates/rebalance.yml

############# data loading ################
- section_start: data_loading
-
  image: sequoiatools/gideon
  command: "kv --ops {{.Scale 5000}} --create 30 --get 70 --delete 10     --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
-
  command: "kv --ops {{.Scale 2000}} --create 60 --get 40 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
-
  command: "kv --ops {{.Scale 2000}} --create 60 --get 40 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
-
  command: "kv --ops {{.Scale 100}} --create 100 --sizes 1024  --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"
- section_end: data_loading


###############  create indexes ################
- template: cbq
  args: "'create index default_rating on `{{.Bucket}}`\\(rating) using GSI'"
- args: "'create index default_result on `{{.Bucket}}`\\(result) using GSI'"
- args: "'create primary index on `{{.Bucket}}` using GSI'"
- args: "'create index o1_rating on `{{.NthBucket 1}}`\\(rating) using GSI'"
- args: "'create index o1_claims on `{{.NthBucket 1}}`\\(claim) using GSI'"
- args: "'create index o1_result on `{{.NthBucket 1}}`\\(result) using GSI'"
- args: "'create index o2_rating on `{{.NthBucket 2}}`\\(rating) using GSI'"
- args: "'create index o2_claims on `{{.NthBucket 2}}`\\(claim) using GSI'"
- args: "'create index o2_result on `{{.NthBucket 2}}`\\(result) using GSI'"
- args: "'create index o3_rating on `{{.NthBucket 3}}`\\(rating) using GSI'"
- args: "'create index o3_claims on `{{.NthBucket 3}}`\\(claim) using GSI'"
- args: "'create index o3_result on `{{.NthBucket 3}}`\\(result) using GSI'"


###############  query index ################
# run http attacks against view with various skip param
- template: attack_query
  args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'select * from default where rating > 0  limit 50'"
- args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'select * from `{{.NthBucket 1}}` where rating > 100  limit 50'"
- args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'select SUM\\(rating) from `{{.NthBucket 2}}` where result = SUCCESS limit 50'"
- args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'select SUM\\(rating) from `{{.NthBucket 3}}` where claim like A% limit 20'"
- args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'delete from default where rating < 300'"
- args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'delete from default where rating > 700'"
- args: "0, {{.Scale 10}}, {{.QueryNodePort}}, 'delete from default where rating > 300 and rating < 700'"


# ###############  swap indexer ################
- template: rebalance_swap
  args: "{{.InActiveNode}}, {{.IndexNode}}, index"
  alias: SwapRebId


###############  drop indexes during rebalance ################
- template: cbq
  args: "'drop primary index on `{{.Bucket}}` using GSI'"
- args: "'drop index `{{.NthBucket 1}}`.o1_rating using GSI'"
- args: "'drop index `{{.NthBucket 2}}`.o2_rating using GSI'"
- args: "'drop index `{{.NthBucket 3}}`.o3_rating using GSI'"


###############  'when' swap rebalance is done add back some and drop others ################
- template: cbq
  args: "'create primary index on `{{.Bucket}}` using GSI'"
- args: "'create index o3_rating on `{{.NthBucket 3}}`\\(rating) using GSI'"
- args: "'drop index `{{.NthBucket 2}}`.o2_claims using GSI'"
- args: "'drop index `{{.NthBucket 3}}`.o3_claims using GSI'"




###############  swap hard-failover(orchestrator.index) ################
- template: failover_node_forced
  args: "{{.IndexNode}}"
  wait: true
- template: rebalance_in
  args: "{{.InActiveNode}}"
  alias: SwapFailId
  wait: true


###############  'when' hard failover is done add back all indexes ################
- template: cbq
  args: "'create index default_rating on `{{.Bucket}}`\\(rating) using GSI'"
- args: "'create index default_claims on `{{.Bucket}}`\\(claim) using GSI'"
- args: "'create index default_result on `{{.Bucket}}`\\(result) using GSI'"
- args: "'create primary index on `{{.Bucket}}` using GSI'"
- args: "'create index o1_rating on `{{.NthBucket 1}}`\\(rating) using GSI'"
- args: "'create index o1_claims on `{{.NthBucket 1}}`\\(claim) using GSI'"
- args: "'create index o1_result on `{{.NthBucket 1}}`\\(result) using GSI'"
- args: "'create index o2_rating on `{{.NthBucket 2}}`\\(rating) using GSI'"
- args: "'create index o2_claims on `{{.NthBucket 2}}`\\(claim) using GSI'"
- args: "'create index o2_result on `{{.NthBucket 2}}`\\(result) using GSI'"
- args: "'create index o3_rating on `{{.NthBucket 3}}`\\(rating) using GSI'"
- args: "'create index o3_claims on `{{.NthBucket 3}}`\\(claim) using GSI'"
- args: "'create index o3_result on `{{.NthBucket 3}}`\\(result) using GSI'"



############### data loading for some time ################
- template: pillowfight
  args: "{{.Orchestrator}}, {{.Bucket}}, -M 512 -I {{.Scale 2000}} -B {{.Scale 200}} -t 4  --rate-limit {{.Scale 2000}}, {{.AuthPassword}}"
  duration: 600  # 10 min data loading
  wait: true

######  failover recently added index nodes  ######
- before: "{{.Status `SwapFailId` | eq `exited`}}"
  template: failover_node_forced
  args: "{{.LastIndexNode}}"
  wait: true
- template: rebalance_in
  args: "{{.InActiveNode}}, index"
  wait: true


# #### add back index nodes ####
- template: add_node
  args: "{{.NthInActiveNode 0}}, index"
- args: "{{.NthInActiveNode 1}}, index"
- template: rebalance
  wait: true
