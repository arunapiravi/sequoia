-
  include: tests/templates/kv.yml, tests/templates/vegeta.yml, tests/templates/analytics.yml

############### data loading ################
-
  image: sequoiatools/gideon
  requires:  "{{eq true .DoOnce}}"
  command: "kv --ops {{.Scale 10}} --create 100  --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
  duration: 60
-
  command: "kv --ops {{.Scale 10}} --create 100 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
  duration: 60
-
  command: "kv --ops {{.Scale 10}} -create 100 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
  duration: 60
-
  command: "kv --ops {{.Scale 1}} --create 100 --sizes 512  --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"
  duration: 60
  wait: true

###############  create indexes and keep them forever ################
-
- template: cbq
#- template: analytics_rest
  args: "create bucket bucket1 with {\\\"name\\\":\\\"{{.Bucket}}\\\"};"
- args: "create bucket bucket2 with {\\\"name\\\":\\\"{{.NthBucket 1}}\\\"};"
- args: "create bucket bucket3 with {\\\"name\\\":\\\"{{.NthBucket 2}}\\\"};"
- args: "create bucket bucket4 with {\\\"name\\\":\\\"{{.NthBucket 3}}\\\"};"
- args: "create shadow dataset ds1 on bucket1;"
- args: "create shadow dataset ds2 on bucket2;"
- args: "create shadow dataset ds3 on bucket3;"
- args: "create shadow dataset ds4 on bucket4;"
- args: "connect bucket bucket1;"
- args: "connect bucket bucket2;"
- args: "connect bucket bucket3;"
- args: "connect bucket bucket4;"
- args: "create index idx_result1 on ds1\\(result:string);"
- args: "create index idx_result2 on ds2\\(result:string);"
  wait: true

############### run mutations ################
-
  image: sequoiatools/gideon
  command: "kv --ops {{.Scale 10}} --create 30 --update 50 --delete 20 --expire 15 --ttl 600 --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
  alias: GideonContainer1
-
  command: "kv --ops {{.Scale 10}} --create 30 --update 50 --delete 20 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
  alias: GideonContainer2
-
  command: "kv --ops {{.Scale 10}} --create 40 --update 40 --delete 20 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
  alias: GideonContainer3
-
  command: "kv --ops {{.Scale 5}} --create 60 --update 20 --delete 20 --sizes 512 --expire 50 --ttl 600 --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"
  alias: GideonContainer4

# ###############  run queries ################
- template: attack_query
  args: "86400, 12, {{.Nodes | net 2}}, 'SELECT name as id, result as bucketName, `type` as `Type`, array_length\\(profile.friends\\) as num_friends FROM  ds1 where result = \\\"SUCCESS\\\" and profile is not missing and array_length\\(profile.friends\\) > 5 limit 100'"
- args: "86400, 12, {{.Nodes | net 3}}, 'SELECT name as id, result as bucketName, `type` as `Type`, array_length\\(profile.friends\\) as num_friends FROM  ds2 where result = \\\"SUCCESS\\\" and profile is not missing and array_length\\(profile.friends\\) = 5'"
- args: "86400, 12, {{.Nodes | net 2}}, 'select sum\\(friends.num_friends\\) from \\(select array_length\\(profile.friends\\) as num_friends from ds3\\) as friends'"
- args: "86400, 12, {{.Nodes | net 3}}, 'SELECT name as id, result as Result, `type` as `Type`, array_length\\(profile.friends\\) as num_friends FROM  ds4 where result = \\\"SUCCESS\\\" and profile is not missing and array_length\\(profile.friends\\) > 5 order by name UNION ALL SELECT name as id, result as Result, `type` as `Type`, array_length\\(profile.friends\\) as num_friends FROM  ds4 where result != \\\"SUCCESS\\\" and profile is not missing and array_length\\(profile.friends\\) = 5 order by name'"
  wait: true

# stop gideon data loading
-
  client:
    op: rm
    container: GideonContainer1
-
  client:
    op: rm
    container: GideonContainer2
-
  client:
    op: rm
    container: GideonContainer3
-
  client:
    op: rm
    container: GideonContainer4

